A Описание движка.
	Целью являлось написание гибкого движка SFIM: Site with Flexible Installation Modules "Сайт с гибко встраиваемыми модулями"

I Структура папок Движка:
/
├──admin                 #Панель управления сайтом. Содержит PHP файлы
├──conf                  #Настройки сайта. Содержит PHP файлы с константами
├──engine                #Настройки сайта. Содержит PHP файлы с классами, библиотеками, модулями
│  ├──kernel             #Ядро движка. Содержит PHP файлы
│  ├──libs               #Библиотеки сайта. Содержит PHP файлы
│  ├──modules            #Модули сайта. Содержит PHP файлы
│  └──templates          #Шаблоны ядра сайта. Содержит TPL шаблоны	
└──install               #Установочные файлы сайта. Содержит PHP файлы для развёртки сайта	



II Последовательность работы движка.
1. Файл index.php
	Подключает константы
	Подключает класс Kernel
	1.1 Создаёт экземпляр Kernel -> 2.1
	1.2 Вызов метода run() -> 2.2
	1.3 Вызов метода view(). Параметр - файл TPL шаблона для сборки текста) -> STOP
2. Файл engine/Kernel.php. Класс Kernel
	Подключение класса ModuleLoader
	Подключение класса MySQL
	Подключение класса SmartyExt
	Подключение класса Menu
	
	2.1 Вызывается конструктор. Режется URL и загоняется в массив $_urlArray. Исправление адреса, перенаправление на правильный адрес. -> 1.2
	2.2 Подключение к БД. вызов urlScaner(). Проверка элементов адреса в таблице URL. В случае несуществующего генерация исключения 404
		Определение номера модуля.
	2.3 Если 404, то перенаправление на error/404
	2.4 Создание экземпляра ModuleLoader -> 3.1
	2.5 Получаем массив $_out методом getOutput(); -> 1.3

3. Файл engine/ModuleLoader.php.  Класс ModuleLoader
	2.1 Вызывается конструктор -> 2.2
	2.2 Вызывается loadModule()
		Определение по типу модуля путь к файлу инициализации модуля. Вызов файла %module_path%/%module_name%/init.php
		Например, если в БД будет модуль №1 и path="text", константа класса ModuleLoader::MODULE_PATH хранит значение engine/modules/,
		тогда будет подключен файл engine/modules/text/init.php и передано ему управление
		Внутри файла init.php будет доступен массив $data cо следующими элементами:
		$data["id"] - id раздела из таблицы URL
		$data["get"] - get переменные
		$data["url"] - url адрес
		$data["urlArray"] - url ввиде массива
	2.3 Выполняется код в соответствующем файле init.php
	2.4 В переменную $output передаются результаты -> 2.5
	
III Как создать свой модуль для сайта?
	1. В папке modules создайте директорию с именем вашего модуля
	2. Добавьте в таблицу БД сайта Modules запись: moduleId | Заголовок модуля | Комментарий к модулю | Имя папки
		Например: 3 | Галерея | Простая галерея сайта | galary
	3. Создайте файл init.php в котором подключите соответствующие классы модуля 
		(классы могут находиться внутри папки модуля, а также во вложенных папках)
		Для получения данных от сайта используйте массив $data.
		Структура массива $data:
		$data["id"] - id раздела из таблицы URL
		$data["url"] - url адрес
		$data["urlArray"] - url ввиде массива
		$data["parameters"] - параметры в URL ввиде массива
		
		Для передачи данных в ядро сайта используйте массив $output
		Структура массива $output:
		$output["html"] - html визуальная часть модуля - html разметка, которая будет подставленна в шаблоны верхнего уровня
		$output["mode"] - mode - как обрабатывать результаты модуля
		
	4. Как поступать если у модуля имеется параметры в URL, которые не являются get запросом?
		Если модуль не является разделом, то в поле БД use_parameters поставьте 1.
		К примеру, есть модуль:
		
		Таблица Modules:
		+----------------------------------+
		|moduleId | title   | descr | Path |
		+----------------------------------+
		|       5 | Галерея | -//-  | -//- |     
		+----------------------------------+
		
		Есть раздел сайта:
		
		Таблица URL:
		+-------------------------------------------------------------------------------+
		|id	| link  | title	  | title_tag | module | position | pid | use_parameters|
		+-------------------------------------------------------------------------------+
		|     1	|    /  | Главная |     -//-  |      1 |        0 |   0 |             0 |
		+-------------------------------------------------------------------------------+	
		|     2	| apple | Яблоко  |     -//-  |      5 |        0 |   1 |             1 |
		+-------------------------------------------------------------------------------+	
		
		Есть адрес: site.com/apple/add/16
		
		Когда будет разбор адреса, даижок, определит тип модуля для элемена apple:
		тип модуля - 5. параметр use_parameters=1, значит дальнейший разбор URL не будет, 345 и 16 будут являться параметрами.
		
		Если бы use_parameters=0, тогда разбор продолжится и add будет являться подразделом apple и т.д.
		

		Пример: http://new.com/fruit/apple/add/16/
		У apple стоит use_parameters=1
		
		Тогда массив $data будет содержать следующее:
		array(4) { 
			["id"]=> string(1) "3" 
			["get"]=> array(2) { 
				["query"]=> string(2) "hi" 
				["world"]=> string(4) "4556" 
			}
			["post"]=> &array(0) { }
			["urlArray"]=> &array(5) { 
				[0]=> string(1) "/" 
				[1]=> string(5) "fruit" 
				[2]=> string(5) "apple" 
				[3]=> string(3) "add" 
				[4]=> string(2) "16" 
			} 
			["parameters"]=> &array(2) { 
				[0]=> string(3) "add" 
				[1]=> string(2) "16" 
			}
		}
	5. Разрешено пользоваться классами из папки libs. Классами других модулей пользоваться не рекомендуется (а вдруг модуль снесут)

ДЛЯ ПОДРОБНОЙ ИНФОРМАЦИИ ЧИТАЙ ДОКУМЕНТАЦИЮ ПО ФАЙЛАМ И КЛАССАМ ДВИЖКА!!!
		
		